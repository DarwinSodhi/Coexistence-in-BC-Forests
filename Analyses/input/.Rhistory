library(data.table)
library(tibble)
library(dplyr)
LiCordatafinal <- read_csv("LiCordatafinal.csv")
#fixeserrors in species' names
LiCordatafinal$Species <- gsub(x= LiCordatafinal$Species, pattern = "lONSOF", replacement = "LONSOF")
LiCordatafinal$Species<- gsub(x= LiCordatafinal$Species, pattern = "TSHUET", replacement = "TSUHET")
LiCordatafinal$specieslatbi<- gsub(x= LiCordatafinal$specieslatbi, pattern = "lONSOF", replacement = "LONSOF")
LiCordatafinal$specieslatbi<- gsub(x= LiCordatafinal$specieslatbi, pattern = "TSHUET", replacement = "TSUHET")
LiCordata_adult <- LiCordatafinal[LiCordatafinal$seedlingoradult == 'a',]
LiCordata_adult1 <- LiCordatafinal[LiCordatafinal$Species == 'AMBIENT',]
LiCordata_adult <- na.omit(LiCordata_adult)
LiCordata_adult <- LiCordata_adult[,c(1:2,426:440,448,451)]
LiCordata_adult[, c(3:17)] <- sapply(LiCordata_adult[, c(3:17)], as.numeric)
LiCordata_adult1 <- LiCordata_adult1[,c(1:2,426:440,448,451)]
LiCordata_adult1[, c(3:17)] <- sapply(LiCordata_adult1[, c(3:17)], as.numeric)
#makes rowsname species names
rownames(LiCordata_adult) <- make.names(LiCordata_adult$Species, unique = TRUE)
#created dataset for one site and all PFD readings
k <- setDT(LiCordata_adult, row.names(LiCordata_adult))
View(k)
k <- dcast(k, k$BETPAP01 ~ k$Site,
value.var = c("R1", "R10", "R11", "R12", "R13", "R14", "R15", "R2", "R3", "R4",
"R5", "R6", "R7", "R8", "R9"))
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
setwd("~/Documents/Ph.D/LI-COR Data (Manning Park)")
library(data.table)
library(tibble)
library(dplyr)
library(vegan)
library(tidyverse)
library(dbplyr)
library(tidyr)
library(reshape2)
LiCordatafinal <- read_csv("LiCordatafinal.csv")
#fixeserrors in species' names
LiCordatafinal$Species <- gsub(x= LiCordatafinal$Species, pattern = "lONSOF", replacement = "LONSOF")
LiCordatafinal$Species<- gsub(x= LiCordatafinal$Species, pattern = "TSHUET", replacement = "TSUHET")
LiCordatafinal$specieslatbi<- gsub(x= LiCordatafinal$specieslatbi, pattern = "lONSOF", replacement = "LONSOF")
LiCordatafinal$specieslatbi<- gsub(x= LiCordatafinal$specieslatbi, pattern = "TSHUET", replacement = "TSUHET")
LiCordata_adult <- LiCordatafinal[LiCordatafinal$seedlingoradult == 'a',]
LiCordata_adult1 <- LiCordatafinal[LiCordatafinal$Species == 'AMBIENT',]
LiCordata_adult <- na.omit(LiCordata_adult)
LiCordata_adult <- LiCordata_adult[,c(1:2,426:440,448,451)]
LiCordata_adult[, c(3:17)] <- sapply(LiCordata_adult[, c(3:17)], as.numeric)
LiCordata_adult1 <- LiCordata_adult1[,c(1:2,426:440,448,451)]
LiCordata_adult1[, c(3:17)] <- sapply(LiCordata_adult1[, c(3:17)], as.numeric)
#makes rowsname species names
rownames(LiCordata_adult) <- make.names(LiCordata_adult$Species, unique = TRUE)
#created dataset for one site and all PFD readings
k <- setDT(LiCordata_adult, row.names(LiCordata_adult))
k <- dcast(k, k$BETPAP01 ~ k$Site,
value.var = c("R1", "R10", "R11", "R12", "R13", "R14", "R15", "R2", "R3", "R4",
"R5", "R6", "R7", "R8", "R9"))
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
setwd("~/Documents/Ph.D/LI-COR Data (Manning Park)")
library(reshape2)
library(tibble)
library(dplyr)
library(vegan)
library(tidyverse)
library(dbplyr)
library(tidyr)
library(reshape2)
library(data.table)
LiCordatafinal <- read_csv("LiCordatafinal.csv")
#fixeserrors in species' names
LiCordatafinal$Species <- gsub(x= LiCordatafinal$Species, pattern = "lONSOF", replacement = "LONSOF")
LiCordatafinal$Species<- gsub(x= LiCordatafinal$Species, pattern = "TSHUET", replacement = "TSUHET")
LiCordatafinal$specieslatbi<- gsub(x= LiCordatafinal$specieslatbi, pattern = "lONSOF", replacement = "LONSOF")
LiCordatafinal$specieslatbi<- gsub(x= LiCordatafinal$specieslatbi, pattern = "TSHUET", replacement = "TSUHET")
LiCordata_adult <- LiCordatafinal[LiCordatafinal$seedlingoradult == 'a',]
LiCordata_adult1 <- LiCordatafinal[LiCordatafinal$Species == 'AMBIENT',]
LiCordata_adult <- na.omit(LiCordata_adult)
LiCordata_adult <- LiCordata_adult[,c(1:2,418:424,448,451)]
LiCordata_adult[, c(3:9)] <- sapply(LiCordata_adult[, c(3:9)], as.numeric)
LiCordata_adult1 <- LiCordata_adult1[,c(1:2,419:423,448,451)]
LiCordata_adult1[, c(3:7)] <- sapply(LiCordata_adult1[, c(3:7)], as.numeric)
#makes rowsname species names
rownames(LiCordata_adult) <- make.names(LiCordata_adult$specieslatbi, unique = TRUE)
#created dataset for one site and all PFD readings
k <- setDT(LiCordata_adult, row.names(LiCordata_adult))
k <- dcast(k, k$BETPAP ~ k$Site,
value.var = c("PFD-B", "PFD-FR", "PFD-G", "PFD-R", "PFD-UV"))
View(k)
LiCordatafinal <- read_csv("LiCordatafinal.csv")
#fixeserrors in species' names
LiCordatafinal$Species <- gsub(x= LiCordatafinal$Species, pattern = "lONSOF", replacement = "LONSOF")
LiCordatafinal$Species<- gsub(x= LiCordatafinal$Species, pattern = "TSHUET", replacement = "TSUHET")
LiCordatafinal$specieslatbi<- gsub(x= LiCordatafinal$specieslatbi, pattern = "lONSOF", replacement = "LONSOF")
LiCordatafinal$specieslatbi<- gsub(x= LiCordatafinal$specieslatbi, pattern = "TSHUET", replacement = "TSUHET")
LiCordata_adult <- LiCordatafinal[LiCordatafinal$seedlingoradult == 'a',]
LiCordata_adult1 <- LiCordatafinal[LiCordatafinal$Species == 'AMBIENT',]
LiCordata_adult <- na.omit(LiCordata_adult)
LiCordata_adult <- LiCordata_adult[,c(1:2,418:424,448,451)]
LiCordata_adult[, c(3:9)] <- sapply(LiCordata_adult[, c(3:9)], as.numeric)
LiCordata_adult1 <- LiCordata_adult1[,c(1:2,419:423,448,451)]
LiCordata_adult1[, c(3:7)] <- sapply(LiCordata_adult1[, c(3:7)], as.numeric)
#makes rowsname species names
rownames(LiCordata_adult) <- make.names(LiCordata_adult$Species, unique = TRUE)
#created dataset for one site and all PFD readings
k <- setDT(LiCordata_adult, row.names(LiCordata_adult))
k <- dcast(k, k$BETPAP01 ~ k$Site,
value.var = c("PFD-B", "PFD-FR", "PFD-G", "PFD-R", "PFD-UV"))
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
library(tidyverse)
library(dbplyr)
library(tidyr)
library(tibble)
library(dplyr)
library(reshape2)
library(data.table)
#Import datasets
NMDS_RambspcPSPSFT <- read.csv("~/Documents/Ph.D/LI-COR Data (pacific spirit park)/SFT/NMDS_RambspcPSPSFT.csv", header=TRUE)
NMDS_RambspcPSPST <- read.csv("~/Documents/Ph.D/LI-COR Data (pacific spirit park)/NMDS_RambspcPSPST.csv", header=TRUE)
colnames(NMDS_RambspcPSPSFT)[1] <- "Species"
colnames(NMDS_RambspcPSPST)[1] <- "Species"
NMDS_RambspcPSPSFT$specieslatbi<-sub("^([[:alpha:]]*).*", "\\1", NMDS_RambspcPSPSFT$Species)
NMDS_RambspcPSPST$specieslatbi<-sub("^([[:alpha:]]*).*", "\\1", NMDS_RambspcPSPST$Species)
NMDS_RambspcPSP<- rbind(NMDS_RambspcPSPSFT,NMDS_RambspcPSPST)
NMDS_RambspcPSP <- setDT(NMDS_RambspcPSP, row.names(NMDS_RambspcPSP))
NMDS_RambspcPSP_wise<-dcast(NMDS_RambspcPSP, NMDS_RambspcPSP$specieslatbi~NMDS_RambspcPSP$Site,
value.var = c("R1", "R10", "R11", "R12", "R13", "R14", "R15", "R2", "R3", "R4",
"R5", "R6", "R7", "R8", "R9"))
NMDS_RambspcPSP <- setDT(NMDS_RambspcPSP, row.names(NMDS_RambspcPSP))
View(NMDS_RambspcPSP)
#Import datasets
NMDS_RambspcPSPSFT <- read.csv("~/Documents/Ph.D/LI-COR Data (pacific spirit park)/SFT/NMDS_RambspcPSPSFT.csv", header=TRUE)
NMDS_RambspcPSPST <- read.csv("~/Documents/Ph.D/LI-COR Data (pacific spirit park)/NMDS_RambspcPSPST.csv", header=TRUE)
colnames(NMDS_RambspcPSPSFT)[1] <- "Species"
colnames(NMDS_RambspcPSPST)[1] <- "Species"
NMDS_RambspcPSPSFT$specieslatbi<-sub("^([[:alpha:]]*).*", "\\1", NMDS_RambspcPSPSFT$Species)
NMDS_RambspcPSPST$specieslatbi<-sub("^([[:alpha:]]*).*", "\\1", NMDS_RambspcPSPST$Species)
NMDS_RambspcPSP<- rbind(NMDS_RambspcPSPSFT,NMDS_RambspcPSPST)
View(NMDS_RambspcPSP)
NMDS_RambspcPSP <- setDT(NMDS_RambspcPSP, row.names(NMDS_RambspcPSP$Species))
View(NMDS_RambspcPSP)
NMDS_RambspcPSP_wide<-dcast(NMDS_RambspcPSP, NMDS_RambspcPSP$specieslatbi~NMDS_RambspcPSP$Site,
value.var = c("R1", "R10", "R11", "R12", "R13", "R14", "R15", "R2", "R3", "R4",
"R5", "R6", "R7", "R8", "R9"))
NMDS_RambspcPSP <- setDT(NMDS_RambspcPSP, row.names(NMDS_RambspcPSP$Species))
View(NMDS_RambspcPSP)
row.names(NMDS_RambspcPSP)
NMDS_RambspcPSP<- rbind(NMDS_RambspcPSPSFT,NMDS_RambspcPSPST)
View(NMDS_RambspcPSP)
rownames(NMDS_RambspcPSP) <- make.names(NMDS_RambspcPSP$Species, unique = TRUE)
View(NMDS_RambspcPSP)
NMDS_RambspcPSP <- setDT(NMDS_RambspcPSP, row.names(NMDS_RambspcPSP))
View(NMDS_RambspcPSP)
#created dataset for one site and all PFD readings
k <- setDT(LiCordata_adult, row.names(LiCordata_adult))
LiCordatafinal <- read_csv("LiCordatafinal.csv")
#fixeserrors in species' names
LiCordatafinal$Species <- gsub(x= LiCordatafinal$Species, pattern = "lONSOF", replacement = "LONSOF")
LiCordatafinal$Species<- gsub(x= LiCordatafinal$Species, pattern = "TSHUET", replacement = "TSUHET")
LiCordatafinal$specieslatbi<- gsub(x= LiCordatafinal$specieslatbi, pattern = "lONSOF", replacement = "LONSOF")
LiCordatafinal$specieslatbi<- gsub(x= LiCordatafinal$specieslatbi, pattern = "TSHUET", replacement = "TSUHET")
LiCordata_adult <- LiCordatafinal[LiCordatafinal$seedlingoradult == 'a',]
LiCordata_adult1 <- LiCordatafinal[LiCordatafinal$Species == 'AMBIENT',]
LiCordata_adult <- na.omit(LiCordata_adult)
LiCordata_adult <- LiCordata_adult[,c(1:2,426:440,448,451)]
LiCordata_adult[, c(3:17)] <- sapply(LiCordata_adult[, c(3:17)], as.numeric)
LiCordata_adult1 <- LiCordata_adult1[,c(1:2,426:440,448,451)]
LiCordata_adult1[, c(3:17)] <- sapply(LiCordata_adult1[, c(3:17)], as.numeric)
#makes rowsname species names
rownames(LiCordata_adult) <- make.names(LiCordata_adult$Species, unique = TRUE)
#makes rowsname species names
rownames(LiCordata_adult) <- make.names(LiCordata_adult$Species, unique = TRUE)
#created dataset for one site and all PFD readings
k <- setDT(LiCordata_adult, row.names(LiCordata_adult))
View(k)
NMDS_RambspcPSP <- setDT(NMDS_RambspcPSP, row.names(NMDS_RambspcPSP))
NMDS_RambspcPSP_wide<-dcast(NMDS_RambspcPSP, NMDS_RambspcPSP$POPTRI~NMDS_RambspcPSP$Site,
value.var = c("R1", "R10", "R11", "R12", "R13", "R14", "R15", "R2", "R3", "R4",
"R5", "R6", "R7", "R8", "R9"))
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
library(tidyverse)
library(dbplyr)
library(tidyr)
library(reshape2)
library(data.table)
library(tibble)
library(dplyr)
#Import datasets
NMDS_RambspcPSPSFT <- read.csv("~/Documents/Ph.D/LI-COR Data (pacific spirit park)/SFT/NMDS_RambspcPSPSFT.csv", header=TRUE)
NMDS_RambspcPSPST <- read.csv("~/Documents/Ph.D/LI-COR Data (pacific spirit park)/NMDS_RambspcPSPST.csv", header=TRUE)
colnames(NMDS_RambspcPSPSFT)[1] <- "Species"
colnames(NMDS_RambspcPSPST)[1] <- "Species"
NMDS_RambspcPSPSFT$specieslatbi<-sub("^([[:alpha:]]*).*", "\\1", NMDS_RambspcPSPSFT$Species)
NMDS_RambspcPSPST$specieslatbi<-sub("^([[:alpha:]]*).*", "\\1", NMDS_RambspcPSPST$Species)
NMDS_RambspcPSP<- rbind(NMDS_RambspcPSPSFT,NMDS_RambspcPSPST)
rownames(NMDS_RambspcPSP) <- make.names(NMDS_RambspcPSP$Species, unique = TRUE)
View(NMDS_RambspcPSP)
NMDS_RambspcPSP <- setDT(NMDS_RambspcPSP, row.names(NMDS_RambspcPSP))
NMDS_RambspcPSP_wide<-dcast(NMDS_RambspcPSP, NMDS_RambspcPSP$POPTRI~NMDS_RambspcPSP$Site,
value.var = c("R1", "R10", "R11", "R12", "R13", "R14", "R15", "R2", "R3", "R4",
"R5", "R6", "R7", "R8", "R9"))
set.seed(1)
NMDS_RambspcPSP <- setDT(NMDS_RambspcPSP, row.names(NMDS_RambspcPSP))
NMDS_RambspcPSP_wide<-dcast(NMDS_RambspcPSP, NMDS_RambspcPSP$POPTRI~NMDS_RambspcPSP$Site,
value.var = c("R1", "R10", "R11", "R12", "R13", "R14", "R15", "R2", "R3", "R4",
"R5", "R6", "R7", "R8", "R9"))
NMDS_RambspcPSP <- setDT(NMDS_RambspcPSP, row.names(NMDS_RambspcPSP))
View(NMDS_RambspcPSP)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
library(reshape2)
library(data.table)
library(tibble)
library(dplyr)
library(tidyverse)
library(dbplyr)
library(tidyr)
#Import datasets
NMDS_RambspcPSPSFT <- read.csv("~/Documents/Ph.D/LI-COR Data (pacific spirit park)/SFT/NMDS_RambspcPSPSFT.csv", header=TRUE)
NMDS_RambspcPSPST <- read.csv("~/Documents/Ph.D/LI-COR Data (pacific spirit park)/NMDS_RambspcPSPST.csv", header=TRUE)
colnames(NMDS_RambspcPSPSFT)[1] <- "Species"
colnames(NMDS_RambspcPSPST)[1] <- "Species"
NMDS_RambspcPSPSFT$specieslatbi<-sub("^([[:alpha:]]*).*", "\\1", NMDS_RambspcPSPSFT$Species)
NMDS_RambspcPSPST$specieslatbi<-sub("^([[:alpha:]]*).*", "\\1", NMDS_RambspcPSPST$Species)
NMDS_RambspcPSP<- rbind(NMDS_RambspcPSPSFT,NMDS_RambspcPSPST)
rownames(NMDS_RambspcPSP) <- make.names(NMDS_RambspcPSP$Species, unique = TRUE)
set.seed(1)
NMDS_RambspcPSP <- setDT(NMDS_RambspcPSP, row.names(NMDS_RambspcPSP))
NMDS_RambspcPSP_wide<-dcast(NMDS_RambspcPSP, NMDS_RambspcPSP$POPTRI~NMDS_RambspcPSP$Site,
value.var = c("R1", "R10", "R11", "R12", "R13", "R14", "R15", "R2", "R3", "R4",
"R5", "R6", "R7", "R8", "R9"))
View(NMDS_RambspcPSP)
names(NMDS_RambspcPSP)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
setwd("~/Documents/Ph.D/LI-COR Data (Manning Park)")
library(tidyverse)
library(dbplyr)
library(tidyr)
library(data.table)
library(tibble)
library(dplyr)
library(reshape2)
LiCordatafinal <- read_csv("LiCordatafinal.csv")
#fixeserrors in species' names
LiCordatafinal$Species <- gsub(x= LiCordatafinal$Species, pattern = "lONSOF", replacement = "LONSOF")
LiCordatafinal$Species<- gsub(x= LiCordatafinal$Species, pattern = "TSHUET", replacement = "TSUHET")
LiCordatafinal$specieslatbi<- gsub(x= LiCordatafinal$specieslatbi, pattern = "lONSOF", replacement = "LONSOF")
LiCordatafinal$specieslatbi<- gsub(x= LiCordatafinal$specieslatbi, pattern = "TSHUET", replacement = "TSUHET")
LiCordata_adult <- LiCordatafinal[LiCordatafinal$seedlingoradult == 'a',]
LiCordata_adult1 <- LiCordatafinal[LiCordatafinal$Species == 'AMBIENT',]
LiCordata_adult <- na.omit(LiCordata_adult)
LiCordata_adult <- LiCordata_adult[,c(1:2,426:440,448,451)]
LiCordata_adult[, c(3:17)] <- sapply(LiCordata_adult[, c(3:17)], as.numeric)
LiCordata_adult1 <- LiCordata_adult1[,c(1:2,426:440,448,451)]
LiCordata_adult1[, c(3:17)] <- sapply(LiCordata_adult1[, c(3:17)], as.numeric)
#makes rowsname species names
rownames(LiCordata_adult) <- make.names(LiCordata_adult$Species, unique = TRUE)
#created dataset for one site and all PFD readings
k <- setDT(LiCordata_adult, row.names(LiCordata_adult))
k <- dcast(k, k$BETPAP01 ~ k$Site,
value.var = c("R1", "R10", "R11", "R12", "R13", "R14", "R15", "R2", "R3", "R4",
"R5", "R6", "R7", "R8", "R9"))
l <- LiCordata_adult1
l2<- l %>% group_by(l$Site) %>% summarise_all(funs(mean))
View(k)
setwd("~/Documents/Ph.D/LI-COR Data (Manning Park)/R readings")
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
library(tidyverse)
library(dbplyr)
library(tidyr)
library(reshape2)
library(data.table)
library(tibble)
library(dplyr)
nmds <-
list.files(pattern = "*.csv") %>%
map_df(~read.csv(.))
View(nmds)
###################################################
#Models attempting to code dataset to run linear models
###################################################
setwd("~/Documents/Ph.D/LI-COR Data (Manning Park)/NMDS")
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
library(tidyverse)
library(dbplyr)
library(tidyr)
library(reshape2)
library(data.table)
library(tibble)
library(dplyr)
nmds <-
list.files(pattern = "*.csv") %>%
map_df(~read.csv(.))
View(nmds)
nmds$specieslatbi<-sub("^([[:alpha:]]*).*", "\\1", nmds$X)
nmds1 <- melt(nmds, id.vars = c("X", "specieslatbi"))
nmds1 <- na.omit(nmds1)
nmds1$site <- (sub("^[^_]*_", "", nmds1$variable))
nmds1$variable <- gsub("_.*", "",nmds1$variable)
View(nmds1)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
library(tidyverse)
library(dbplyr)
library(tidyr)
library(reshape2)
library(data.table)
library(tibble)
library(dplyr)
#Import datasets
NMDS_RambspcPSPSFT <- read.csv("~/Documents/Ph.D/LI-COR Data (pacific spirit park)/SFT/NMDS_RambspcPSPSFT.csv", header=TRUE)
NMDS_RambspcPSPST <- read.csv("~/Documents/Ph.D/LI-COR Data (pacific spirit park)/NMDS_RambspcPSPST.csv", header=TRUE)
colnames(NMDS_RambspcPSPSFT)[1] <- "Species"
colnames(NMDS_RambspcPSPST)[1] <- "Species"
NMDS_RambspcPSPSFT$specieslatbi<-sub("^([[:alpha:]]*).*", "\\1", NMDS_RambspcPSPSFT$Species)
NMDS_RambspcPSPST$specieslatbi<-sub("^([[:alpha:]]*).*", "\\1", NMDS_RambspcPSPST$Species)
NMDS_RambspcPSP<- rbind(NMDS_RambspcPSPSFT,NMDS_RambspcPSPST)
rownames(NMDS_RambspcPSP) <- make.names(NMDS_RambspcPSP$Species, unique = TRUE)
View(NMDS_RambspcPSP)
View(NMDS_RambspcPSP)
View(NMDS_RambspcPSP)
NMDS_RambspcPSP1 <- melt(NMDS_RambspcPSP, id.vars = c("Species", "specieslatbi"))
View(NMDS_RambspcPSP1)
###################################################
#Models attempting to code dataset to run linear models
###################################################
setwd("~/Documents/Ph.D/LI-COR Data (Manning Park)/NMDS")
nmds <-
list.files(pattern = "*.csv") %>%
map_df(~read.csv(.))
View(nmds)
nmds$specieslatbi<-sub("^([[:alpha:]]*).*", "\\1", nmds$X)
nmds1 <- melt(nmds, id.vars = c("X", "specieslatbi"))
nmds1 <- na.omit(nmds1)
nmds1$site <- (sub("^[^_]*_", "", nmds1$variable))
nmds1$variable <- gsub("_.*", "",nmds1$variable)
View(nmds1)
nmds$specieslatbi<-sub("^([[:alpha:]]*).*", "\\1", nmds$X)
View(nmds)
NMDS_RambspcPSP1 <- melt(NMDS_RambspcPSP, id.vars = c("Species"))
View(NMDS_RambspcPSP1)
View(NMDS_RambspcPSP)
NMDS_RambspcPSP1 <- melt(NMDS_RambspcPSP, id.vars = c("Species", "Site"))
View(NMDS_RambspcPSP1)
unique(NMDS_RambspcPSP1$variable)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
library(tidyverse)
library(dbplyr)
library(tidyr)
library(reshape2)
library(data.table)
library(tibble)
library(dplyr)
#Import datasets
NMDS_RambspcPSPSFT <- read.csv("~/Documents/Ph.D/LI-COR Data (pacific spirit park)/SFT/NMDS_RambspcPSPSFT.csv", header=TRUE)
NMDS_RambspcPSPST <- read.csv("~/Documents/Ph.D/LI-COR Data (pacific spirit park)/NMDS_RambspcPSPST.csv", header=TRUE)
colnames(NMDS_RambspcPSPSFT)[1] <- "Species"
colnames(NMDS_RambspcPSPST)[1] <- "Species"
NMDS_RambspcPSP<- rbind(NMDS_RambspcPSPSFT,NMDS_RambspcPSPST)
NMDS_RambspcPSP1 <- melt(NMDS_RambspcPSP, id.vars = c("Species", "Site"))
View(NMDS_RambspcPSP1)
unique(NMDS_RambspcPSP1$Site)
unique(NMDS_RambspcPSP1$variable)
nmds$specieslatbi<-sub("^([[:alpha:]]*).*", "\\1", nmds$X)
###################################################
#Models attempting to code dataset to run linear models
###################################################
setwd("~/Documents/Ph.D/LI-COR Data (Manning Park)/NMDS")
nmds <-
list.files(pattern = "*.csv") %>%
map_df(~read.csv(.))
nmds$specieslatbi<-sub("^([[:alpha:]]*).*", "\\1", nmds$X)
View(nmds)
nmds1 <- melt(nmds, id.vars = c("X", "specieslatbi"))
View(nmds1)
NMDS_RambspcPSP1$specieslatbi<-sub("^([[:alpha:]]*).*", "\\1", NMDS_RambspcPSP1$Species)
View(NMDS_RambspcPSP1)
nmds1 <- na.omit(nmds1)
nmds1$site <- (sub("^[^_]*_", "", nmds1$variable))
nmds1$variable <- gsub("_.*", "",nmds1$variable)
View(NMDS_RambspcPSP1)
path <- unique(NMDS_RambspcPSP1$variable)
rm(list=ls()) # remove everything currently held in the R memory
setwd("~/Documents/Ph.D/LI-COR Data (pacific spirit park)")
setwd("~/Documents/Ph.D/LI-COR Data (pacific spirit park)")
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
library(tidyverse)
library(dbplyr)
library(tidyr)
library(reshape2)
library(data.table)
library(tibble)
library(dplyr)
#Import datasets
NMDS_RambspcPSPSFT <- read.csv("~/Documents/Ph.D/LI-COR Data (pacific spirit park)/SFT/NMDS_RambspcPSPSFT.csv", header=TRUE)
NMDS_RambspcPSPST <- read.csv("~/Documents/Ph.D/LI-COR Data (pacific spirit park)/NMDS_RambspcPSPST.csv", header=TRUE)
colnames(NMDS_RambspcPSPSFT)[1] <- "Species"
colnames(NMDS_RambspcPSPST)[1] <- "Species"
NMDS_RambspcPSP<- rbind(NMDS_RambspcPSPSFT,NMDS_RambspcPSPST)
NMDS_RambspcPSP1 <- melt(NMDS_RambspcPSP, id.vars = c("Species", "Site"))
NMDS_RambspcPSP1$specieslatbi<-sub("^([[:alpha:]]*).*", "\\1", NMDS_RambspcPSP1$Species)
View(NMDS_RambspcPSP1)
NMDS_RambspcPSP<- rbind(NMDS_RambspcPSPSFT,NMDS_RambspcPSPST)
NMDS_RambspcPSP1 <- melt(NMDS_RambspcPSP, id.vars = c("Species", "Site"))
NMDS_RambspcPSP1$specieslatbi<-sub("^([[:alpha:]]*).*", "\\1", NMDS_RambspcPSP1$Species)
View(NMDS_RambspcPSP1)
path <- unique(NMDS_RambspcPSP1$variable)
for (i in (unique(NMDS_RambspcPSP1$variable))){
filename<- paste("LicormodelsPSP",i,".csv", sep = "")
li <- subset(NMDS_RambspcPSP1, variable == i)
li <- na.omit(li)
lm(value ~ site + specieslatbi, data= li)
s <- summary(lm(value ~ Site + specieslatbi, data= li))
s <- as.data.frame(s$coefficients)
write.csv(s, filename)
}
path <- unique(NMDS_RambspcPSP1$variable)
for (i in (unique(NMDS_RambspcPSP1$variable))){
filename<- paste("LicormodelsPSP",i,".csv", sep = "")
li <- subset(NMDS_RambspcPSP1, variable == i)
li <- na.omit(li)
lm(value ~ Site + specieslatbi, data= li)
s <- summary(lm(value ~ Site + specieslatbi, data= li))
s <- as.data.frame(s$coefficients)
write.csv(s, filename)
}
unique(NMDS_RambspcPSP1$Site)
unique(NMDS_RambspcPSP1$specieslatbi)
setwd("~/Documents/Ph.D/LI-COR Data (pacific spirit park)")
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
library(tidyverse)
library(dbplyr)
library(tidyr)
library(reshape2)
library(data.table)
library(tibble)
library(dplyr)
#Import datasets
NMDS_RambspcPSPSFT <- read.csv("~/Documents/Ph.D/LI-COR Data (pacific spirit park)/SFT/NMDS_RambspcPSPSFT.csv", header=TRUE)
NMDS_RambspcPSPST <- read.csv("~/Documents/Ph.D/LI-COR Data (pacific spirit park)/NMDS_RambspcPSPST.csv", header=TRUE)
#Import datasets
NMDS_RambspcPSPSFT <- read.csv("~/Documents/Ph.D/LI-COR Data (pacific spirit park)/SFT/NMDS_RambspcPSPSFT.csv", header=TRUE)
#Import datasets
NMDS_RambspcPSPSFT <- read.csv("~/Documents/Ph.D/LI-COR Data (pacific spirit park)/SFT/NMDS_RambspcPSPSFT.csv", header=TRUE)
NMDS_RambspcPSPST <- read.csv("~/Documents/Ph.D/LI-COR Data (pacific spirit park)/NMDS_RambspcPSPST.csv", header=TRUE)
colnames(NMDS_RambspcPSPSFT)[1] <- "Species"
colnames(NMDS_RambspcPSPST)[1] <- "Species"
NMDS_RambspcPSP<- rbind(NMDS_RambspcPSPSFT,NMDS_RambspcPSPST)
NMDS_RambspcPSP1 <- melt(NMDS_RambspcPSP, id.vars = c("Species", "Site"))
NMDS_RambspcPSP1$specieslatbi<-sub("^([[:alpha:]]*).*", "\\1", NMDS_RambspcPSP1$Species)
path <- unique(NMDS_RambspcPSP1$variable)
li <- subset(NMDS_RambspcPSP1, variable == path[1])
li <- na.omit(li)
lm(value ~ Site + specieslatbi, data= li)
plot(lm(value ~ Site + specieslatbi, data= li))
s <- summary(lm(value ~ Site + specieslatbi, data= li))
View(s)
s
#Import datasets
NMDS_RambspcPSPSFT <- read.csv("~/Documents/GitHub/Coexistence-in-BC-Forests/Analyses/input/NMDS_RambspcPSPSFT.csv", header=TRUE)
NMDS_RambspcPSPST <- read.csv("~/Documents/GitHub/Coexistence-in-BC-Forests/Analyses/input/NMDS_RambspcPSPST.csv", header=TRUE)
#Import datasets
NMDS_RambspcPSPSFT <- read.csv("~/Documents/GitHub/Coexistence-in-BC-Forests/Analyses/input/NMDS_RambspcPSPSFT.csv", header=TRUE)
setwd("~/Documents/GitHub/Coexistence-in-BC-Forests/Analyses/input/")
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
library(tidyverse)
library(dbplyr)
library(tidyr)
library(reshape2)
library(data.table)
library(tibble)
library(dplyr)
#Import datasets
NMDS_RambspcPSPSFT <- read.csv("~/Documents/GitHub/Coexistence-in-BC-Forests/Analyses/input/NMDS_RambspcPSPSFT.csv", header=TRUE)
NMDS_RambspcPSPST <- read.csv("~/Documents/GitHub/Coexistence-in-BC-Forests/Analyses/input/NMDS_RambspcPSPST.csv", header=TRUE)
colnames(NMDS_RambspcPSPSFT)[1] <- "Species"
colnames(NMDS_RambspcPSPST)[1] <- "Species"
NMDS_RambspcPSP<- rbind(NMDS_RambspcPSPSFT,NMDS_RambspcPSPST)
NMDS_RambspcPSP1 <- melt(NMDS_RambspcPSP, id.vars = c("Species", "Site"))
NMDS_RambspcPSP1$specieslatbi<-sub("^([[:alpha:]]*).*", "\\1", NMDS_RambspcPSP1$Species)
path <- unique(NMDS_RambspcPSP1$variable)
###################################################
#Models attempting to code dataset to run linear models
###################################################
setwd("~/Documents/GitHub/Coexistence-in-BC-Forests/Analyses/output")
###################################################
#Models attempting to code dataset to run linear models
###################################################
setwd("~/Documents/GitHub/Coexistence-in-BC-Forests/Analyses/input")
###################################################
#Models attempting to code dataset to run linear models
###################################################
setwd("~/Documents/GitHub/Coexistence-in-BC-Forests/Analyses/input")
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
library(tidyverse)
library(dbplyr)
library(tidyr)
library(reshape2)
library(data.table)
library(tibble)
library(dplyr)
NMDS_RambspcPSPSFT <- read.csv(NMDS_RambspcPSPSFT.csv, header=FALSE)
NMDS_RambspcPSPSFT <- read.csv("NMDS_RambspcPSPSFT.csv", header=FALSE)
path <- unique(nmds1$variable)
